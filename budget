#!/usr/bin/env bash

fz(){ fzf --ansi --reverse --height=40% "$@"; }

read_income(){ in+=("$2"); ii+=("$3"); ((income_total+=$3)); }
read_expense(){ en+=("$2"); ei+=("$3"); ((expense_total+=$3)); }

add_expense(){ ei+=("$2"); en+=("$1"); }
add_income(){ ii+=("$2"); in+=("$1"); }

print_expense(){
	printf '\e[4m\e[1m%-12.12s%12.12s\e[m\e[4m%s\n' "expense:" "$((expense_total))" " $cur"
	for i in ${!ei[@]};{ printf '\e[m%-12.12s\e[1m%12.9s\e[m%s\n' "${en[i]}" "$((${ei[i]}))" " $cur";}
}

print_income(){
	printf '\e[4m\e[1m%-12.12s%12.12s\e[m\e[4m%s\n' "income:" "$((income_total))" " $cur"
	for i in ${!in[@]};{ printf '\e[m%-12.12s\e[1m%12.9s\e[m%s\n' "${in[i]}" "$((${ii[i]}))" " $cur";}
}

print_all(){
	echo; print_income; echo; print_expense
		printf '\n\e[1m%s\n' "remaining: $((income_total-expense_total)) $cur"
}

print(){
	print_all
}

read_file(){
	while read -r line; do ((i++))
		[[ ! -z "$line" ]] || continue; set $line
		[[ $1 =~ income ]] && { state=income; i=0; continue; }
		[[ $1 =~ expense ]] && { state=expense; i=0; continue; }
		[[ $state = income ]] && read_income "$i" "$1" "$2"
		[[ $state = expense ]] && read_expense "$i" "$1" "$2"
	done  < "$budget"
}

print_opts(){ printf '%s\n' "print" "income" "expense"; }

main(){
	budget="$HOME/Dokumenter/budget.tab"
	[[ -f $budget ]] || budget="example.bgt"
	read_file
	eval $(print_opts | fz -0 -1 -q "$1")
}


cur="kr"
main "$@"
