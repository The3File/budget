#!/usr/bin/env bash
reset(){ printf '\e[u\e[?25l\e[J'; }

print_all(){
	for i in income expense; do echo; print "$i"; done
	printf '\n\e[1m%s\n' "remaining: $((it-et)) $cur"
}

print(){
	[[ $1 ]] || { print_all; return; }
	case $1 in
		income) sn=(${in[@]}); si=(${ii[@]}); st=$it ;;
		expense) sn=(${en[@]}); si=(${ei[@]}); st=$et ;;
	esac
	printf '\e[4;34m\e[1m%-16.16s%16.16s\e[m\e[4m%s\n' "$1:" "$((st))" " $cur"
	for ((i=0;i<${#si[@]};i++)){
		printf '\e[0;34m%-16.16s\e[1;35m%16.11s\e[0m%s\n' "${sn[i]}" "$((${si[i]}))" " $cur"
	}
}

print_menu(){
	printf '\e[1m%12.16s \e[0;36m%22.15s\e[m\n' "BUDGET 0.0.1" "[beta]"
	for i in ${!menu[@]}; do
		case $i in
			$selection) printf '\e[1;36m> %s\e[m\n' "${menu[selection]}" ;;
			*) printf '\e[2m\e[2C%s\e[m\n' "${menu[i]}"
		esac
	done
	print_all
}

add(){
	read -rp "new $1: " entry
	read -rp "value $1: " value
	case $1 in
		income) in+=("$entry"); ii+=("$value") ;;
		expense) en+=("$entry"); ei+=("$value") ;;
	esac
}

calc_total(){
	it=""; et=""
	for i in ${!ii[@]};{ ((it+=${ii[i]})); }
	for i in ${!ei[@]};{ ((et+=${ei[i]})); }
}

delete(){
	read -rp "delete $1: " entry
	case $1 in
		income) sn=("${in[@]}"); sn=("${ii[@]}") ;;
		income) sn=("${en[@]}"); sn=("${ei[@]}") ;;
	esac
	for i in "${!sn}";{
		[[ "${sn[i]}" =~ $entry ]] || continue
		case $1 in income) unset in[i] ii[i] ;; expense) unset en[i] ei[i] ;; esac
	}
}

read_file(){
	while read -r line; do ((i++))
		[[ ! -z "$line" ]] && set $line || continue
		[[ $2 =~ [0-9] ]] || { state=$1; continue; }
		case $state in
			"income"*) in+=("$1"); ii+=("$2"); ((it+=$2)) ;;
			"expense"*) en+=("$1"); ei+=("$2"); ((et+=$2)) ;;
		esac
	done  < "$budget"
}

write_file(){
	for i in ${!in[@]}; do
		printf '%s\n' "income:" "${in[@]} ${ii[@]}"
	done
}

case_selection(){
	case $1 in
		add) menu_old=("${menu[@]}")
			menu=("income" "expense")
			old_selection=$selection
			selection=0
			cmd="add"
			;;
		delete)
			menu_old=("${menu[@]}")
			menu=("income" "expense")
			old_selection=$selection
			selection=0
			cmd="delete"
			;;
		income) case $cmd in add) add income ;; delete) delete income; esac ;;
		expense) case $cmd in add) add expense ;; delete) delete expense; esac ;;
	esac
	calc_total
}

case_key(){
	special_key $1
	case ${e:-$1} in
		k|$'\e[A') ((selection=selection>0?selection-1:0)) ;;
		j|$'\e[B') ((selection=selection<${#menu[@]}-1?selection+1:${#menu[@]}-1)) ;;
		l|$'\e[C'|'') case_selection "${menu[selection]}" ;;
		h|$'\e[D'|$'\177') selection=$old_selection; menu=("${menu_old[@]}") ;;
		$'\x1b'|q) exit 0 ;;
	esac
}

special_key(){
    [[ $1 == $'\e' ]] && {
        read -rsn 2
        [[ ${1}${REPLY} == $'\e\e['* ]] && read -rsn 1 _
        e=${1}${REPLY}
    }
}

main(){
	budget="$HOME/Dokumenter/budget.tab"
	[[ -f $budget ]] || budget="example.bgt"
	selection=0; menu=("add" "delete")
	printf '\e[s'
	read_file
	for((;;)){ st="0";reset; print_menu; read -rsn1 key; case_key "$key"; }
}


trap "printf '\e[u\e[m\e[J\e[?25h'" EXIT
trap 'exit' SIGINT
cur="kr"
main "$@"
