#!/usr/bin/env bash

fz(){ fzf --ansi --reverse --height=40% -0 -1 -q "$1"; }

income(){
	cmd=$1; shift
	eval $(printf '%s\n' "print" "add" "delete" | fz $cmd)_income "$@"
}

expense(){
	cmd=$1; shift
	eval $(printf '%s\n' "print" "add" "delete" | fz $cmd)_expense "$@"
}

add_income(){
	in+=("$1"); ii+=("$2"); ((it+=$2))
}

add_expense(){
	en+=("$1"); ei+=("$2"); ((et+=$2))
}

delete(){
	for i in "${!sn}";{
		[[ "${sn[i]}" =~ $1 ]] || continue
		read -rp $''"delete ${sn[i]}"
		[[ "$REPLY" =~ y|Y ]] || continue
		unset !sn[i] !si[i]
	}
	print_income
}

<<<<<<< HEAD
case_state(){
	case $1 in
		income) sn=("${in[@]}"); si=("${ii[@]}") ;;
		expense) sn=("${in[@]}"); si=("${ii[@]}") ;;
	esac
}

print(){
	case_state $1
	printf '\e[4m\e[1m%-12.12s%12.12s\e[m\e[4m%s\n' "expense:" "$((expense_total))" " $cur"
	for i in ${!si[@]};{ printf '\e[m%-12.12s\e[1m%12.9s\e[m%s\n' "${sn[i]}" "$((${si[i]}))" " $cur";}
=======
print_expense(){
	printf '\e[4m\e[1m%-12.12s%12.12s\e[m\e[4m%s\n' "expense:" "$((et))" " $cur"
	for i in ${!ei[@]};{
		printf '\e[m%-12.12s\e[1m%12.9s\e[m%s\n' "${en[i]}" "$((${ei[i]}))" " $cur"
	}
>>>>>>> a9596df8f8f427d2eabc629126136d655d5d800f
}

print_income(){
	printf '\e[4m\e[1m%-12.12s%12.12s\e[m\e[4m%s\n' "income:" "$((it))" " $cur"
	for i in ${!in[@]};{
		printf '\e[m%-12.12s\e[1m%12.9s\e[m%s\n' "${in[i]}" "$((${ii[i]}))" " $cur"
	}
}

print_all(){
	echo; print income; echo; print expense
	printf '\n\e[1m%s\n' "remaining: $((it-et)) $cur"
}

print(){
	print_all
}

read_file(){
	while read -r line; do ((i++))
		[[ ! -z "$line" ]] && set $line || continue
		[[ $2 =~ [0-9] ]] || { state=$1; continue; }
		case $state in
			income*) add_income "$1" "$2" ;;
			expense*) add_expense "$1" "$2" ;;
		esac
	done  < "$budget"
}

print_opts(){ printf '%s\n' "print" "income" "expense"; }

main(){
	cur="kr"
	budget="$HOME/Dokumenter/budget.tab"
	[[ -f $budget ]] || budget="example.bgt"
	read_file
	cmd=$1; shift
	eval $(print_opts | fz "$cmd") "$@"
}


cur="kr"
main "$@"
